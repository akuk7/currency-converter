{"version":3,"sources":["logo.svg","combonents/Converter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Converter","_useState","useState","_useState2","_slicedToArray","info","setInfo","_useState3","_useState4","input","setInput","_useState5","_useState6","from","setFrom","_useState7","_useState8","to","setTo","_useState9","_useState10","options","setOptions","_useState11","_useState12","output","setOutput","convert","rate","useEffect","Axios","get","concat","then","res","data","Object","keys","React","createElement","className","type","placeholder","onChange","e","target","value","Dropdown","HiSwitchHorizontal","size","onClick","temp","flip","toFixed","App","Convertor","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.362f97ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport { HiSwitchHorizontal } from \"react-icons/hi\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nconst Converter = () => {\r\n  // Initializing all the state variables\r\n  const [info, setInfo] = useState([]);\r\n  const [input, setInput] = useState(0);\r\n  const [from, setFrom] = useState(\"usd\");\r\n  const [to, setTo] = useState(\"inr\");\r\n  const [options, setOptions] = useState([]);\r\n  const [output, setOutput] = useState(0);\r\n\r\n  // Calling the api whenever the dependency changes\r\n  useEffect(() => {\r\n    Axios.get(\r\n      `https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/${from}.json`\r\n    ).then((res) => {\r\n      setInfo(res.data[from]);\r\n    });\r\n  }, [from]);\r\n\r\n  // Calling the convert function whenever\r\n  // a user switches the currency\r\n  useEffect(() => {\r\n    setOptions(Object.keys(info));\r\n    convert();\r\n  }, [info]);\r\n\r\n  // Function to convert the currency\r\n  function convert() {\r\n    var rate = info[to];\r\n    setOutput(input * rate);\r\n  }\r\n\r\n  // Function to switch between two currency\r\n  function flip() {\r\n    var temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"content\">\r\n        <div className=\"heading\">\r\n          <h1>Currency converter</h1>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"left\">\r\n            <h3>Amount</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter the amount\"\r\n              onChange={(e) => setInput(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"non-left\">\r\n            <div className=\"middle\">\r\n              <h3>From</h3>\r\n              <Dropdown\r\n                options={options}\r\n                onChange={(e) => {\r\n                  setFrom(e.value);\r\n                }}\r\n                value={from}\r\n                placeholder=\"From\"\r\n              />\r\n            </div>\r\n            <div className=\"switch\">\r\n              <HiSwitchHorizontal\r\n                size=\"30px\"\r\n                onClick={() => {\r\n                  flip();\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"right\">\r\n              <h3>To</h3>\r\n              <Dropdown\r\n                options={options}\r\n                onChange={(e) => {\r\n                  setTo(e.value);\r\n                }}\r\n                value={to}\r\n                placeholder=\"To\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"result\">\r\n          <button\r\n            onClick={() => {\r\n              convert();\r\n            }}\r\n          >\r\n            Convert\r\n          </button>\r\n          <div className=\"convert\">\r\n            <p>\r\n              {\"Converted Amount:\" +\r\n                \"    \" +\r\n                input +\r\n                \" \" +\r\n                from +\r\n                \" = \" +\r\n                output.toFixed(2) +\r\n                \" \" +\r\n                to}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Converter;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Convertor from \"./combonents/Converter\";\nimport React from \"react\";\n\nfunction App() {\n  return <Convertor />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}